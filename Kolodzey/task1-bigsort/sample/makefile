#makefile, который собирает проект, использующий библиотеку bigsort

#Кстати, этот файл не нужно менять, когда добавлен новый кусок кода в source :)
#результат = исполняемый файл USER_PROG (будет лежать в текущей директории)
#ну ещё там же будет .o файл пользовательского кода лежать
#предполагается, что код проекта лежит в текущей директории,
#по умолчанию в файле mymain.cpp, но можно поменять в переменной USER_SOURCE
#в файле mymain.cpp написано #include <bigsort>
#и программа хочет использовать функции библиотеки <bigsort>

#имя файла исходного кода пользователя
USER_SOURCE = mymain.cpp

#имя исполняемого файла пользователя
USER_PROG = myprog

#папка, где лежит исходный код библиотеки <bigsort>
BIGSORT_DIR = ../source

#папка, куда складывать object files библиотеки <bigsort>
BIN_DIR = ../bin

#компилятор = clang++
CXX = clang++



$(USER_PROG): $(BIN_DIR)/bigsort.a $(USER_PROG).o
	$(CXX) $(BIN_DIR)/bigsort.a $(USER_PROG).o -o $(USER_PROG)



#isystem - чтобы в #include <bigsort> путь не писать

$(USER_PROG).o: $(USER_SOURCE) $(BIGSORT_DIR)/bigsort.h
	$(CXX) -isystem $(BIGSORT_DIR) -c $(USER_SOURCE) -o $(USER_PROG).o



#$(wildcard ../source/*.cpp) =
#строка с именами всех файлов с расширением cpp в папке source
#!важно! файлы уже должны существовать!

#$(patsubst ../source/%.cpp,../bin/%.o, "некая строка")
#заменяем все имена исходников на имена соответствующих object файлов
#т. е. список object файлов получаем из списка исходников,
#чтобы проект таки собрался, если object-файлов в папке ещё нет

#$@ = волшебная переменная, которая равна цели вызываемой инструкции

#$^ = волшебная переменная, которая равна всем пререквизитам инструкции

#AR и ARFLAGS = архиватор и его флаги,
#вроде как библиотеку в один файл собирает
#ну по крайней мере googletest делают так же

$(BIN_DIR)/bigsort.a: $(patsubst $(BIGSORT_DIR)/%.cpp,$(BIN_DIR)/%.o,\
	                  $(wildcard $(BIGSORT_DIR)/*.cpp))
	$(AR) $(ARFLAGS) $@ $^



#шаблонное правило, говорящее, что файлы .o нужно получать из .cpp
#$< = волшебная перменная, равная первому пререквизиту
#кстати, в этом вызове в лоб написать шаблон вместо неё не получится

$(BIN_DIR)/%.o: $(BIGSORT_DIR)/%.cpp
	$(CXX) -c -o $@ $<
